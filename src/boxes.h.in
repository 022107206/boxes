

#ifdef DEBUG
#ifndef DEBUG_STUFF
#define DEBUG_STUFF

char *shape_name[] = {
    "NW", "NNW", "N", "NNE", "NE", "ENE", "E", "ESE",
    "SE", "SSE", "S", "SSW", "SW", "WSW", "W", "WNW"
};

char *ofs_name[] =   {
    "NW_NNW", "NNW_N", "N_NNE", "NNE_NE", "NE_ENE", "ENE_E", "E_ESE", "ESE_SE",
    "SE_SSE", "SSE_S", "S_SSW", "SSW_SW", "SW_WSW", "WSW_W", "W_WNW", "WNW_NW"
};

#endif /* DEBUG_STUFF */
#endif /* DEBUG */

/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */

#ifndef BOXES_H
#define BOXES_H

#define PROJECT "boxes"                  /* name of program */
#define VERSION "1.0"                    /* current release of project */

#define ANZ_OFFSETS 16

typedef enum {
        NW_NNW, NNW_N, N_NNE, NNE_NE, NE_ENE, ENE_E, E_ESE, ESE_SE,
        SE_SSE, SSE_S, S_SSW, SSW_SW, SW_WSW, WSW_W, W_WNW, WNW_NW
} offset_t;


#define ANZ_SHAPES 16

typedef enum {
    NW, NNW, N, NNE, NE, ENE, E, ESE, SE, SSE, S, SSW, SW, WSW, W, WNW
} shape_t;


typedef struct {
    char **chars;
    int    height;
    int    width;
} sentry_t;

typedef struct {
    char    *name;
    char    *author;
    char    *created;
    char    *revision;
    char    *revdate;
    char    *sample;
    sentry_t shape[ANZ_SHAPES];
    int      offset[ANZ_OFFSETS];
    shape_t  elastic[ANZ_SHAPES];
    int      anz_elastic;
} design_t;

extern design_t *designs;
extern int design_idx;

extern int yylineno;

int yyerror (const char *fmt, ...);


#endif /* BOXES_H */


/*EOF*/                                          /* vim: set cindent sw=4: */
